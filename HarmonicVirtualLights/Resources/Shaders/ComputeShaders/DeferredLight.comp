#version 450

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, rgba32f) uniform image2D deferredPosition;
layout (binding = 1, rgba32f) uniform image2D deferredNormal;
layout (binding = 2, r8ui) uniform uimage2D deferredBrdf;

layout (binding = 3, rgba16f) uniform image2D hdrImage;

layout(push_constant) uniform PushConstantData
{
	uvec4 resolution;
} pc;

void main()
{
	uvec2 index = gl_GlobalInvocationID.xy;

	// Make sure compute work is within bounds
	if(index.x >= pc.resolution.x || index.y >= pc.resolution.y)
		return;

	// Load G-buffers
	vec3 worldPos = imageLoad(deferredPosition, ivec2(index)).rgb;
	vec3 worldNormal = imageLoad(deferredNormal, ivec2(index)).rgb;
	uint xBrdfIndex = imageLoad(deferredBrdf, ivec2(index)).r;

	vec3 color = worldNormal;
	
	// Write color
	imageStore(hdrImage, ivec2(index), vec4(color, 1.0f));
}